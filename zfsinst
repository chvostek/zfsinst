#!/bin/sh

# $Id$

# LiveCD:
#
#   # ifconfig re0 up
#   # dhclient re0
#   # scp ghoti@pc:bin/zfsinst /tmp/

set -e

if df | grep -q ^z/; then
	echo ">> Cleaning up previous install..."
	zfs list | grep ^z/ | cut -f1 -d\  | sort -r | xargs -n 1 zfs destroy
	zpool destroy z
fi

if [ "$1" = "-n" ]; then
  doit=true
  shift
else
  doit=false
fi

gpart=/sbin/gpart
zpool=/sbin/zpool
zfs=/sbin/zfs
chroot=/usr/sbin/chroot

mirror=false
raid=false

if [ ! -c /dev/ada0 ]; then
  echo "ERROR: no ada0: I don't know where to install." >&2
  kill $$
elif [ -c /dev/ada2 ]; then
  raid=true
  type="raid"
elif [ -c /dev/ada1 ]; then
  mirror=true
  type="mirror"
fi

/sbin/kldstat -q -m zfs && /sbin/kldunload zfs

disklist=""
swaplist=""
for ada in /dev/ada?; do
  i=${ada##*/}
  i=${i##*[a-z]}
  if [ -c "/dev/ada${i}" ]; then
    echo ""
    dmesg | sed -ne "/^ada${i}:/s/^/>>	/p"
    read -p ">> Include /dev/ada${i} (Y/n)? " junk
    case "$junk" in
      N|n) continue ;;
    esac
    $gpart destroy -F ada${i} || /bin/true
    $gpart create -s gpt ada${i}
    $gpart add -b 34 -s 64k -t freebsd-boot ada${i}
    $gpart add -s 4G -t freebsd-swap -l swap${i} ada${i}
    $gpart add -t freebsd-zfs -l disk${i} ada${i}
    $gpart bootcode -b /boot/pmbr -p /boot/gptzfsboot -i 1 ada${i}
    disklist="$disklist /dev/gpt/disk${i}"
    swaplist="$swaplist /dev/gpt/swap${i}"
  fi
done

# $gpart destroy -F ada0
# $mirror && $gpart destroy -F ada1
# $raid   && $gpart destroy -F ada2
# $gpart create -s gpt ada0
# $mirror && $gpart create -s gpt ada1
# $raid   && $gpart create -s gpt ada2
# $gpart add -b 34 -s 64k -t freebsd-boot ada0
# $mirror && $gpart add -b 34 -s 64k -t freebsd-boot ada1
# $raid   && $gpart add -b 34 -s 64k -t freebsd-boot ada2
# $gpart add -s 4G -t freebsd-swap -l swap0 ada0
# $mirror && $gpart add -s 4G -t freebsd-swap -l swap1 ada1
# $raid   && $gpart add -s 4G -t freebsd-swap -l swap2 ada2
# $gpart add -t freebsd-zfs -l disk0 ada0
# $mirror && $gpart add -t freebsd-zfs -l disk1 ada1
# $raid   && $gpart add -t freebsd-zfs -l disk2 ada2
# $gpart bootcode -b /boot/pmbr -p /boot/gptzfsboot -i 1 ada0
# $mirror && $gpart bootcode -b /boot/pmbr -p /boot/gptzfsboot -i 1 ada1
# $raid   && $gpart bootcode -b /boot/pmbr -p /boot/gptzfsboot -i 1 ada2

$doit && echo ">> Partitions/boot done, ready to start ZFS... "
$doit || read -p ">> Partitions/boot done, ready to start ZFS... (hit Enter) " junk
echo ">> Disks: $disklist"

/sbin/sysctl kern.geom.debugflags=0x10
/sbin/kldload zfs
if $raid; then
  $zpool create -f -o altroot=/mnt -o cachefile=/tmp/zpool.cache z raidz $disklist
elif $mirror; then
  $zpool create -f -o altroot=/mnt -o cachefile=/tmp/zpool.cache z raidz $disklist
else
  $zpool create -f -o altroot=/mnt -o cachefile=/tmp/zpool.cache z $disklist
fi

$doit && echo ">> ZFS started, ready to create datasets... " 
$doit || read -p ">> ZFS started, ready to create datasets... (hit Enter) " junk

set -x

cd /mnt
$zpool set bootfs=z z
$zfs set checksum=fletcher4 z
$zfs create -o compression=on -o exec=on -o setuid=off z/tmp
chmod 1777 tmp
$zfs create z/usr
$zfs create z/usr/home
ln -s usr/home home
$zfs create -o compression=lzjb -o setuid=off z/usr/ports
$zfs create -o compression=off  -o exec=off -o setuid=off z/usr/ports/distfiles
$zfs create -o compression=off  -o exec=off -o setuid=off z/usr/ports/packages
$zfs create z/var
$zfs create -o compression=lzjb -o exec=off -o setuid=off z/var/crash
$zfs create                     -o exec=off -o setuid=off z/var/db
$zfs create -o compression=lzjb -o exec=on  -o setuid=off z/var/db/pkg
$zfs create                     -o exec=off -o setuid=off z/var/empty
$zfs create -o compression=lzjb -o exec=off -o setuid=off z/var/log
$zfs create -o compression=gzip -o exec=off -o setuid=off z/var/mail
$zfs create                     -o exec=off -o setuid=off z/var/run
$zfs create -o compression=lzjb -o exec=on  -o setuid=off z/var/tmp
chmod 1777 var/tmp
$zfs set readonly=on z/var/empty

set +x

$doit && echo ">> ZFS prep done, ready to extract freebsd-dist... " 
$doit || read -p ">> ZFS prep done, ready to extract freebsd-dist... (hit Enter) " junk

#ls /usr/freebsd-dist/*.txz | xargs -n 1 tar zxvf

for dist in base doc games kernel lib32 ports src; do
  total=$(tar ztvf /usr/freebsd-dist/${dist}.txz 2>&1 | wc -l)
  echo ">>> Extracting $dist ($total files)..."
  tar zxvf /usr/freebsd-dist/${dist}.txz 2>&1 | awk -v total="$total" '
  BEGIN {
    size=70
    if (total>50000) {
      mark=100
    } else
    if (total>10000) {
      mark=10
    } else {
      mark=1
    }
    #mark=int(total/(size*10));
    a=sprintf("%" size "s",0); gsub(/./,"*",a);
    b=sprintf("%" size "s",0); gsub(/./,"-",b);
    line=a b;
  }
  NR%mark==0 {
    printf("\r|%s|", substr(line, size-int(size*(NR/total)), size));
  }
  END {
    printf("\r%" size+2 "s\r", " ");
  }'
done

echo ">> Extraction done, configuring system... "

echo ">>> /etc/rc.conf"
cat <<-EOT1 >> etc/rc.conf

	zfs_enable="YES"
	hostname="install"
	ifconfig_em0="DHCP"
	ifconfig_re0="DHCP"

	EOT1

echo ">>> /boot/loader.conf"
cat <<-EOT2 >> boot/loader.conf

	zfs_load="YES"
	vfs.root.mountfrom="zfs:z"

	# for swap, if we mirror it instead of using swap0/swapN
	#geom_mirror_load="YES"

	EOT2

echo ">>> /etc/fstab"
fmt="\t%s\t\tnone\t\tswap\tsw\t0\t0\n"
cat <<-EOT3 >> etc/fstab
	# Device		Mountpoint	FStype	Options	Dump	Pass#

`for i in $swaplist; do printf "$fmt" "$i"; done`
	#/dev/mirror/swap	none		swap	sw	0	0

	EOT3

cd /

#/sbin/kldload /boot/kernel/geom_mirror.ko
#/sbin/gmirror label -b prefer swap gpt/swap0 gpt/swap1

echo ">> Setting time zone..."
$chroot /mnt tzsetup America/Toronto
echo ">> Making aliases..."
$chroot /mnt sh -c "cd /etc/mail; make aliases"

$doit && echo ">> Finishing up..."
$doit || read -p ">> Ready to finish up? (hit Enter) " junk

echo ">> Datasets created, copying zpool.cache..."
cp -p /tmp/zpool.cache /mnt/boot/zfs/

echo ">> Resetting ZFS mountpoints..."
$zfs set mountpoint=legacy z
$zfs set mountpoint=/tmp z/tmp
$zfs set mountpoint=/usr z/usr
$zfs set mountpoint=/var z/var

echo ">> Exporting ZFS filesystem..."
$zpool export z

